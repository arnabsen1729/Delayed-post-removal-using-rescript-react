// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Post from "./post.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";

function s(prim) {
  return prim;
}

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* DeleteLater */0 :
        window.clearTimeout(action._1);
        return {
                posts: state.posts.concat([action._0]),
                forDeletion: state.forDeletion
              };
    case /* DeleteAbort */1 :
        return {
                posts: state.posts.concat([action._0]),
                forDeletion: state.forDeletion
              };
    case /* DeleteNow */2 :
        var post = action._0;
        return {
                posts: state.posts.filter(function (xpost) {
                      return xpost.id !== post.id;
                    }),
                forDeletion: state.forDeletion
              };
    
  }
}

var initialState = {
  posts: Post.examples,
  forDeletion: undefined
};

function newId(id, index) {
  return id + String(index);
}

function PostFeed$PostItem(Props) {
  var post = Props.post;
  var match = React.useState(function () {
        return false;
      });
  var setShowOptions = match[1];
  var toggleOptions = function (_event) {
    return Curry._1(setShowOptions, (function (param) {
                  return true;
                }));
  };
  if (match[0]) {
    return React.createElement("div", undefined, React.createElement("button", {
                    className: "bg-gray-300"
                  }, "Restore"), React.createElement("button", {
                    className: "bg-gray-300"
                  }, "Delete Immediately"));
  } else {
    return React.createElement("div", {
                className: "border border-gray-700"
              }, React.createElement("div", {
                    className: "text-xl font-bold"
                  }, post.title), React.createElement("div", {
                    className: "text-lg"
                  }, post.author), React.createElement("div", {
                    className: ""
                  }, Belt_Array.mapWithIndex(post.text, (function (index, para) {
                          return React.createElement("div", {
                                      key: post.id + String(index)
                                    }, para);
                        }))), React.createElement("button", {
                    className: "bg-gray-300",
                    onClick: toggleOptions
                  }, "Remove this post"));
  }
}

var PostItem = {
  make: PostFeed$PostItem
};

function PostFeed(Props) {
  var match = React.useReducer(reducer, initialState);
  return React.createElement("div", {
              className: "max-w-3xl mx-auto mt-8 relative s"
            }, React.createElement("div", {
                  className: "space-y-5"
                }, Belt_Array.map(match[0].posts, (function (postData) {
                        return React.createElement(PostFeed$PostItem, {
                                    post: postData
                                  });
                      }))));
}

var make = PostFeed;

export {
  s ,
  reducer ,
  initialState ,
  newId ,
  PostItem ,
  make ,
  
}
/* Post Not a pure module */
